{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Alexi/Documents/GitHub/Surf-SMM/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { ElementRef } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport HLS from 'hls.js';\nimport OBSWebSocket from 'obs-websocket-js';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common/http\";\nconst _c0 = [\"video\"];\nconst obs = new OBSWebSocket();\nexport class ObsComponent {\n  constructor(route, router, _http) {\n    this.route = route;\n    this.router = router;\n    this._http = _http;\n    this.url = \"\";\n    this.hls = new HLS();\n    this.user = 'HOME'; //TODO: User que se pasa por la url como parametro !\n\n    this.playing = false;\n  }\n\n  ngOnInit() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.url = _this.router.url;\n      console.log(_this.url);\n      yield obs.connect('ws://192.168.1.131:4445', 'KksXWF5rcAInQJ83');\n    })();\n  }\n\n  startStreaming() {\n    obs.call('StartStream');\n    this.load('http://localhost:8000/live/STREAM_NAME/index.m3u8');\n  }\n\n  load(currentVideo) {\n    if (HLS.isSupported()) {\n      this.loadVideoWithHLS(currentVideo);\n    } else {\n      console.log('Ups! no es soportado por tu navegador');\n    }\n  }\n\n  loadVideoWithHLS(currentVideo) {\n    this.hls.loadSource(currentVideo);\n    this.hls.attachMedia(this.video.nativeElement);\n  }\n\n}\n\nObsComponent.ɵfac = function ObsComponent_Factory(t) {\n  return new (t || ObsComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.HttpClient));\n};\n\nObsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ObsComponent,\n  selectors: [[\"app-obs\"]],\n  viewQuery: function ObsComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 7);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.video = _t.first);\n    }\n  },\n  decls: 2,\n  vars: 0,\n  template: function ObsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"obs works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJvYnMuY29tcG9uZW50LmNzcyJ9 */\"]\n});","map":{"version":3,"mappings":";AAAA,SAAoBA,UAApB,QAAyD,eAAzD;AAEA,SAASC,UAAT,QAAwC,sBAAxC;AACA,OAAOC,GAAP,MAAgB,QAAhB;AACA,OAAOC,YAAP,MAA6E,kBAA7E;;;;;AACA,MAAMC,GAAG,GAAG,IAAID,YAAJ,EAAZ;AAOA,OAAM,MAAOE,YAAP,CAAmB;EAQvBC,YAAoBC,KAApB,EACUC,MADV,EAEUC,KAFV,EAE2B;IAFP;IACV;IACA;IATF,WAAc,EAAd;IACA,WAAM,IAAIP,GAAJ,EAAN;IAED,YAAsB,MAAtB,CAMoB,CANS;;IAC5B,eAAmB,KAAnB;EAKwB;;EAE1BQ,QAAQ;IAAA;;IAAA;MACZ,KAAI,CAACC,GAAL,GAAW,KAAI,CAACH,MAAL,CAAYG,GAAvB;MACAC,OAAO,CAACC,GAAR,CAAa,KAAI,CAACF,GAAlB;MACA,MAAMP,GAAG,CAACU,OAAJ,CAAY,yBAAZ,EAAuC,kBAAvC,CAAN;IAHY;EAIb;;EAEMC,cAAc;IACnBX,GAAG,CAACY,IAAJ,CAAU,aAAV;IACA,KAAKC,IAAL,CAAW,mDAAX;EACD;;EAEMA,IAAI,CAACC,YAAD,EAAqB;IAC9B,IAAIhB,GAAG,CAACiB,WAAJ,EAAJ,EAAuB;MACrB,KAAKC,gBAAL,CAAsBF,YAAtB;IACD,CAFD,MAEO;MACLN,OAAO,CAACC,GAAR,CAAY,uCAAZ;IACD;EACF;;EAEOO,gBAAgB,CAACF,YAAD,EAAqB;IAC3C,KAAKG,GAAL,CAASC,UAAT,CAAoBJ,YAApB;IACA,KAAKG,GAAL,CAASE,WAAT,CAAqB,KAAKC,KAAL,CAAWC,aAAhC;EACD;;AAlCsB;;;mBAAZpB,cAAYqB;AAAA;;;QAAZrB;EAAYsB;EAAAC;IAAA;;;;;;;;;;;;;;MCZzBF;MAAGA;MAAUA","names":["ElementRef","HttpClient","HLS","OBSWebSocket","obs","ObsComponent","constructor","route","router","_http","ngOnInit","url","console","log","connect","startStreaming","call","load","currentVideo","isSupported","loadVideoWithHLS","hls","loadSource","attachMedia","video","nativeElement","i0","selectors","viewQuery"],"sourceRoot":"","sources":["C:\\Users\\Alexi\\Documents\\GitHub\\Surf-SMM\\frontend\\src\\app\\obs\\obs.component.ts","C:\\Users\\Alexi\\Documents\\GitHub\\Surf-SMM\\frontend\\src\\app\\obs\\obs.component.html"],"sourcesContent":["import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport HLS from 'hls.js';\r\nimport OBSWebSocket, {OBSEventTypes, OBSRequestTypes, OBSResponseTypes} from 'obs-websocket-js';\r\nconst obs = new OBSWebSocket();\r\n\r\n@Component({\r\n  selector: 'app-obs',\r\n  templateUrl: './obs.component.html',\r\n  styleUrls: ['./obs.component.css']\r\n})\r\nexport class ObsComponent implements OnInit {\r\n  private url: string = \"\";\r\n  private hls = new HLS();\r\n  \r\n  public user: string | null = 'HOME' //TODO: User que se pasa por la url como parametro !\r\n  private playing: boolean = false;\r\n  @ViewChild('video', { static: true }) private readonly video: ElementRef<HTMLVideoElement> | any;\r\n\r\n  constructor(private route: ActivatedRoute,\r\n    private router: Router,\r\n    private _http: HttpClient) { }\r\n\r\n  async ngOnInit() {\r\n    this.url = this.router.url;\r\n    console.log (this.url)\r\n    await obs.connect('ws://192.168.1.131:4445', 'KksXWF5rcAInQJ83');\r\n  }\r\n\r\n  public startStreaming(){\r\n    obs.call ('StartStream')\r\n    this.load ('http://localhost:8000/live/STREAM_NAME/index.m3u8')\r\n  }\r\n\r\n  public load(currentVideo: string): void {\r\n    if (HLS.isSupported()) {\r\n      this.loadVideoWithHLS(currentVideo);\r\n    } else {\r\n      console.log('Ups! no es soportado por tu navegador');\r\n    }\r\n  }\r\n\r\n  private loadVideoWithHLS(currentVideo: string) {\r\n    this.hls.loadSource(currentVideo);\r\n    this.hls.attachMedia(this.video.nativeElement);\r\n  }\r\n\r\n}\r\n","<p>obs works!</p>\r\n"]},"metadata":{},"sourceType":"module"}