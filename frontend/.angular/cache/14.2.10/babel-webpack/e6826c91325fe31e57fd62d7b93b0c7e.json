{"ast":null,"code":"var NAMESPACE = require(\"./conventions\").NAMESPACE; //[4]   \tNameStartChar\t   ::=   \t\":\" | [A-Z] | \"_\" | [a-z] | [#xC0-#xD6] | [#xD8-#xF6] | [#xF8-#x2FF] | [#x370-#x37D] | [#x37F-#x1FFF] | [#x200C-#x200D] | [#x2070-#x218F] | [#x2C00-#x2FEF] | [#x3001-#xD7FF] | [#xF900-#xFDCF] | [#xFDF0-#xFFFD] | [#x10000-#xEFFFF]\n//[4a]   \tNameChar\t   ::=   \tNameStartChar | \"-\" | \".\" | [0-9] | #xB7 | [#x0300-#x036F] | [#x203F-#x2040]\n//[5]   \tName\t   ::=   \tNameStartChar (NameChar)*\n\n\nvar nameStartChar = /[A-Z_a-z\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/; //\\u10000-\\uEFFFF\n\nvar nameChar = new RegExp(\"[\\\\-\\\\.0-9\" + nameStartChar.source.slice(1, -1) + \"\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]\");\nvar tagNamePattern = new RegExp('^' + nameStartChar.source + nameChar.source + '*(?:\\:' + nameStartChar.source + nameChar.source + '*)?$'); //var tagNamePattern = /^[a-zA-Z_][\\w\\-\\.]*(?:\\:[a-zA-Z_][\\w\\-\\.]*)?$/\n//var handlers = 'resolveEntity,getExternalSubset,characters,endDocument,endElement,endPrefixMapping,ignorableWhitespace,processingInstruction,setDocumentLocator,skippedEntity,startDocument,startElement,startPrefixMapping,notationDecl,unparsedEntityDecl,error,fatalError,warning,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,comment,endCDATA,endDTD,endEntity,startCDATA,startDTD,startEntity'.split(',')\n//S_TAG,\tS_ATTR,\tS_EQ,\tS_ATTR_NOQUOT_VALUE\n//S_ATTR_SPACE,\tS_ATTR_END,\tS_TAG_SPACE, S_TAG_CLOSE\n\nvar S_TAG = 0; //tag name offerring\n\nvar S_ATTR = 1; //attr name offerring \n\nvar S_ATTR_SPACE = 2; //attr name end and space offer\n\nvar S_EQ = 3; //=space?\n\nvar S_ATTR_NOQUOT_VALUE = 4; //attr value(no quot value only)\n\nvar S_ATTR_END = 5; //attr value end and no space(quot end)\n\nvar S_TAG_SPACE = 6; //(attr value end || tag end ) && (space offer)\n\nvar S_TAG_CLOSE = 7; //closed el<el />\n\n/**\n * Creates an error that will not be caught by XMLReader aka the SAX parser.\n *\n * @param {string} message\n * @param {any?} locator Optional, can provide details about the location in the source\n * @constructor\n */\n\nfunction ParseError(message, locator) {\n  this.message = message;\n  this.locator = locator;\n  if (Error.captureStackTrace) Error.captureStackTrace(this, ParseError);\n}\n\nParseError.prototype = new Error();\nParseError.prototype.name = ParseError.name;\n\nfunction XMLReader() {}\n\nXMLReader.prototype = {\n  parse: function (source, defaultNSMap, entityMap) {\n    var domBuilder = this.domBuilder;\n    domBuilder.startDocument();\n\n    _copy(defaultNSMap, defaultNSMap = {});\n\n    parse(source, defaultNSMap, entityMap, domBuilder, this.errorHandler);\n    domBuilder.endDocument();\n  }\n};\n\nfunction parse(source, defaultNSMapCopy, entityMap, domBuilder, errorHandler) {\n  function fixedFromCharCode(code) {\n    // String.prototype.fromCharCode does not supports\n    // > 2 bytes unicode chars directly\n    if (code > 0xffff) {\n      code -= 0x10000;\n      var surrogate1 = 0xd800 + (code >> 10),\n          surrogate2 = 0xdc00 + (code & 0x3ff);\n      return String.fromCharCode(surrogate1, surrogate2);\n    } else {\n      return String.fromCharCode(code);\n    }\n  }\n\n  function entityReplacer(a) {\n    var k = a.slice(1, -1);\n\n    if (k in entityMap) {\n      return entityMap[k];\n    } else if (k.charAt(0) === '#') {\n      return fixedFromCharCode(parseInt(k.substr(1).replace('x', '0x')));\n    } else {\n      errorHandler.error('entity not found:' + a);\n      return a;\n    }\n  }\n\n  function appendText(end) {\n    //has some bugs\n    if (end > start) {\n      var xt = source.substring(start, end).replace(/&#?\\w+;/g, entityReplacer);\n      locator && position(start);\n      domBuilder.characters(xt, 0, end - start);\n      start = end;\n    }\n  }\n\n  function position(p, m) {\n    while (p >= lineEnd && (m = linePattern.exec(source))) {\n      lineStart = m.index;\n      lineEnd = lineStart + m[0].length;\n      locator.lineNumber++; //console.log('line++:',locator,startPos,endPos)\n    }\n\n    locator.columnNumber = p - lineStart + 1;\n  }\n\n  var lineStart = 0;\n  var lineEnd = 0;\n  var linePattern = /.*(?:\\r\\n?|\\n)|.*$/g;\n  var locator = domBuilder.locator;\n  var parseStack = [{\n    currentNSMap: defaultNSMapCopy\n  }];\n  var closeMap = {};\n  var start = 0;\n\n  while (true) {\n    try {\n      var tagStart = source.indexOf('<', start);\n\n      if (tagStart < 0) {\n        if (!source.substr(start).match(/^\\s*$/)) {\n          var doc = domBuilder.doc;\n          var text = doc.createTextNode(source.substr(start));\n          doc.appendChild(text);\n          domBuilder.currentElement = text;\n        }\n\n        return;\n      }\n\n      if (tagStart > start) {\n        appendText(tagStart);\n      }\n\n      switch (source.charAt(tagStart + 1)) {\n        case '/':\n          var end = source.indexOf('>', tagStart + 3);\n          var tagName = source.substring(tagStart + 2, end).replace(/[ \\t\\n\\r]+$/g, '');\n          var config = parseStack.pop();\n\n          if (end < 0) {\n            tagName = source.substring(tagStart + 2).replace(/[\\s<].*/, '');\n            errorHandler.error(\"end tag name: \" + tagName + ' is not complete:' + config.tagName);\n            end = tagStart + 1 + tagName.length;\n          } else if (tagName.match(/\\s</)) {\n            tagName = tagName.replace(/[\\s<].*/, '');\n            errorHandler.error(\"end tag name: \" + tagName + ' maybe not complete');\n            end = tagStart + 1 + tagName.length;\n          }\n\n          var localNSMap = config.localNSMap;\n          var endMatch = config.tagName == tagName;\n          var endIgnoreCaseMach = endMatch || config.tagName && config.tagName.toLowerCase() == tagName.toLowerCase();\n\n          if (endIgnoreCaseMach) {\n            domBuilder.endElement(config.uri, config.localName, tagName);\n\n            if (localNSMap) {\n              for (var prefix in localNSMap) {\n                if (Object.prototype.hasOwnProperty.call(localNSMap, prefix)) {\n                  domBuilder.endPrefixMapping(prefix);\n                }\n              }\n            }\n\n            if (!endMatch) {\n              errorHandler.fatalError(\"end tag name: \" + tagName + ' is not match the current start tagName:' + config.tagName); // No known test case\n            }\n          } else {\n            parseStack.push(config);\n          }\n\n          end++;\n          break;\n        // end elment\n\n        case '?':\n          // <?...?>\n          locator && position(tagStart);\n          end = parseInstruction(source, tagStart, domBuilder);\n          break;\n\n        case '!':\n          // <!doctype,<![CDATA,<!--\n          locator && position(tagStart);\n          end = parseDCC(source, tagStart, domBuilder, errorHandler);\n          break;\n\n        default:\n          locator && position(tagStart);\n          var el = new ElementAttributes();\n          var currentNSMap = parseStack[parseStack.length - 1].currentNSMap; //elStartEnd\n\n          var end = parseElementStartPart(source, tagStart, el, currentNSMap, entityReplacer, errorHandler);\n          var len = el.length;\n\n          if (!el.closed && fixSelfClosed(source, end, el.tagName, closeMap)) {\n            el.closed = true;\n\n            if (!entityMap.nbsp) {\n              errorHandler.warning('unclosed xml attribute');\n            }\n          }\n\n          if (locator && len) {\n            var locator2 = copyLocator(locator, {}); //try{//attribute position fixed\n\n            for (var i = 0; i < len; i++) {\n              var a = el[i];\n              position(a.offset);\n              a.locator = copyLocator(locator, {});\n            }\n\n            domBuilder.locator = locator2;\n\n            if (appendElement(el, domBuilder, currentNSMap)) {\n              parseStack.push(el);\n            }\n\n            domBuilder.locator = locator;\n          } else {\n            if (appendElement(el, domBuilder, currentNSMap)) {\n              parseStack.push(el);\n            }\n          }\n\n          if (NAMESPACE.isHTML(el.uri) && !el.closed) {\n            end = parseHtmlSpecialContent(source, end, el.tagName, entityReplacer, domBuilder);\n          } else {\n            end++;\n          }\n\n      }\n    } catch (e) {\n      if (e instanceof ParseError) {\n        throw e;\n      }\n\n      errorHandler.error('element parse error: ' + e);\n      end = -1;\n    }\n\n    if (end > start) {\n      start = end;\n    } else {\n      //TODO: 这里有可能sax回退，有位置错误风险\n      appendText(Math.max(tagStart, start) + 1);\n    }\n  }\n}\n\nfunction copyLocator(f, t) {\n  t.lineNumber = f.lineNumber;\n  t.columnNumber = f.columnNumber;\n  return t;\n}\n/**\n * @see #appendElement(source,elStartEnd,el,selfClosed,entityReplacer,domBuilder,parseStack);\n * @return end of the elementStartPart(end of elementEndPart for selfClosed el)\n */\n\n\nfunction parseElementStartPart(source, start, el, currentNSMap, entityReplacer, errorHandler) {\n  /**\n   * @param {string} qname\n   * @param {string} value\n   * @param {number} startIndex\n   */\n  function addAttribute(qname, value, startIndex) {\n    if (el.attributeNames.hasOwnProperty(qname)) {\n      errorHandler.fatalError('Attribute ' + qname + ' redefined');\n    }\n\n    el.addValue(qname, value, startIndex);\n  }\n\n  var attrName;\n  var value;\n  var p = ++start;\n  var s = S_TAG; //status\n\n  while (true) {\n    var c = source.charAt(p);\n\n    switch (c) {\n      case '=':\n        if (s === S_ATTR) {\n          //attrName\n          attrName = source.slice(start, p);\n          s = S_EQ;\n        } else if (s === S_ATTR_SPACE) {\n          s = S_EQ;\n        } else {\n          //fatalError: equal must after attrName or space after attrName\n          throw new Error('attribute equal must after attrName'); // No known test case\n        }\n\n        break;\n\n      case '\\'':\n      case '\"':\n        if (s === S_EQ || s === S_ATTR //|| s == S_ATTR_SPACE\n        ) {\n          //equal\n          if (s === S_ATTR) {\n            errorHandler.warning('attribute value must after \"=\"');\n            attrName = source.slice(start, p);\n          }\n\n          start = p + 1;\n          p = source.indexOf(c, start);\n\n          if (p > 0) {\n            value = source.slice(start, p).replace(/&#?\\w+;/g, entityReplacer);\n            addAttribute(attrName, value, start - 1);\n            s = S_ATTR_END;\n          } else {\n            //fatalError: no end quot match\n            throw new Error('attribute value no end \\'' + c + '\\' match');\n          }\n        } else if (s == S_ATTR_NOQUOT_VALUE) {\n          value = source.slice(start, p).replace(/&#?\\w+;/g, entityReplacer); //console.log(attrName,value,start,p)\n\n          addAttribute(attrName, value, start); //console.dir(el)\n\n          errorHandler.warning('attribute \"' + attrName + '\" missed start quot(' + c + ')!!');\n          start = p + 1;\n          s = S_ATTR_END;\n        } else {\n          //fatalError: no equal before\n          throw new Error('attribute value must after \"=\"'); // No known test case\n        }\n\n        break;\n\n      case '/':\n        switch (s) {\n          case S_TAG:\n            el.setTagName(source.slice(start, p));\n\n          case S_ATTR_END:\n          case S_TAG_SPACE:\n          case S_TAG_CLOSE:\n            s = S_TAG_CLOSE;\n            el.closed = true;\n\n          case S_ATTR_NOQUOT_VALUE:\n          case S_ATTR:\n          case S_ATTR_SPACE:\n            break;\n          //case S_EQ:\n\n          default:\n            throw new Error(\"attribute invalid close char('/')\");\n          // No known test case\n        }\n\n        break;\n\n      case '':\n        //end document\n        errorHandler.error('unexpected end of input');\n\n        if (s == S_TAG) {\n          el.setTagName(source.slice(start, p));\n        }\n\n        return p;\n\n      case '>':\n        switch (s) {\n          case S_TAG:\n            el.setTagName(source.slice(start, p));\n\n          case S_ATTR_END:\n          case S_TAG_SPACE:\n          case S_TAG_CLOSE:\n            break;\n          //normal\n\n          case S_ATTR_NOQUOT_VALUE: //Compatible state\n\n          case S_ATTR:\n            value = source.slice(start, p);\n\n            if (value.slice(-1) === '/') {\n              el.closed = true;\n              value = value.slice(0, -1);\n            }\n\n          case S_ATTR_SPACE:\n            if (s === S_ATTR_SPACE) {\n              value = attrName;\n            }\n\n            if (s == S_ATTR_NOQUOT_VALUE) {\n              errorHandler.warning('attribute \"' + value + '\" missed quot(\")!');\n              addAttribute(attrName, value.replace(/&#?\\w+;/g, entityReplacer), start);\n            } else {\n              if (!NAMESPACE.isHTML(currentNSMap['']) || !value.match(/^(?:disabled|checked|selected)$/i)) {\n                errorHandler.warning('attribute \"' + value + '\" missed value!! \"' + value + '\" instead!!');\n              }\n\n              addAttribute(value, value, start);\n            }\n\n            break;\n\n          case S_EQ:\n            throw new Error('attribute value missed!!');\n        } //\t\t\tconsole.log(tagName,tagNamePattern,tagNamePattern.test(tagName))\n\n\n        return p;\n\n      /*xml space '\\x20' | #x9 | #xD | #xA; */\n\n      case '\\u0080':\n        c = ' ';\n\n      default:\n        if (c <= ' ') {\n          //space\n          switch (s) {\n            case S_TAG:\n              el.setTagName(source.slice(start, p)); //tagName\n\n              s = S_TAG_SPACE;\n              break;\n\n            case S_ATTR:\n              attrName = source.slice(start, p);\n              s = S_ATTR_SPACE;\n              break;\n\n            case S_ATTR_NOQUOT_VALUE:\n              var value = source.slice(start, p).replace(/&#?\\w+;/g, entityReplacer);\n              errorHandler.warning('attribute \"' + value + '\" missed quot(\")!!');\n              addAttribute(attrName, value, start);\n\n            case S_ATTR_END:\n              s = S_TAG_SPACE;\n              break;\n            //case S_TAG_SPACE:\n            //case S_EQ:\n            //case S_ATTR_SPACE:\n            //\tvoid();break;\n            //case S_TAG_CLOSE:\n            //ignore warning\n          }\n        } else {\n          //not space\n          //S_TAG,\tS_ATTR,\tS_EQ,\tS_ATTR_NOQUOT_VALUE\n          //S_ATTR_SPACE,\tS_ATTR_END,\tS_TAG_SPACE, S_TAG_CLOSE\n          switch (s) {\n            //case S_TAG:void();break;\n            //case S_ATTR:void();break;\n            //case S_ATTR_NOQUOT_VALUE:void();break;\n            case S_ATTR_SPACE:\n              var tagName = el.tagName;\n\n              if (!NAMESPACE.isHTML(currentNSMap['']) || !attrName.match(/^(?:disabled|checked|selected)$/i)) {\n                errorHandler.warning('attribute \"' + attrName + '\" missed value!! \"' + attrName + '\" instead2!!');\n              }\n\n              addAttribute(attrName, attrName, start);\n              start = p;\n              s = S_ATTR;\n              break;\n\n            case S_ATTR_END:\n              errorHandler.warning('attribute space is required\"' + attrName + '\"!!');\n\n            case S_TAG_SPACE:\n              s = S_ATTR;\n              start = p;\n              break;\n\n            case S_EQ:\n              s = S_ATTR_NOQUOT_VALUE;\n              start = p;\n              break;\n\n            case S_TAG_CLOSE:\n              throw new Error(\"elements closed character '/' and '>' must be connected to\");\n          }\n        }\n\n    } //end outer switch\n    //console.log('p++',p)\n\n\n    p++;\n  }\n}\n/**\n * @return true if has new namespace define\n */\n\n\nfunction appendElement(el, domBuilder, currentNSMap) {\n  var tagName = el.tagName;\n  var localNSMap = null; //var currentNSMap = parseStack[parseStack.length-1].currentNSMap;\n\n  var i = el.length;\n\n  while (i--) {\n    var a = el[i];\n    var qName = a.qName;\n    var value = a.value;\n    var nsp = qName.indexOf(':');\n\n    if (nsp > 0) {\n      var prefix = a.prefix = qName.slice(0, nsp);\n      var localName = qName.slice(nsp + 1);\n      var nsPrefix = prefix === 'xmlns' && localName;\n    } else {\n      localName = qName;\n      prefix = null;\n      nsPrefix = qName === 'xmlns' && '';\n    } //can not set prefix,because prefix !== ''\n\n\n    a.localName = localName; //prefix == null for no ns prefix attribute \n\n    if (nsPrefix !== false) {\n      //hack!!\n      if (localNSMap == null) {\n        localNSMap = {}; //console.log(currentNSMap,0)\n\n        _copy(currentNSMap, currentNSMap = {}); //console.log(currentNSMap,1)\n\n      }\n\n      currentNSMap[nsPrefix] = localNSMap[nsPrefix] = value;\n      a.uri = NAMESPACE.XMLNS;\n      domBuilder.startPrefixMapping(nsPrefix, value);\n    }\n  }\n\n  var i = el.length;\n\n  while (i--) {\n    a = el[i];\n    var prefix = a.prefix;\n\n    if (prefix) {\n      //no prefix attribute has no namespace\n      if (prefix === 'xml') {\n        a.uri = NAMESPACE.XML;\n      }\n\n      if (prefix !== 'xmlns') {\n        a.uri = currentNSMap[prefix || '']; //{console.log('###'+a.qName,domBuilder.locator.systemId+'',currentNSMap,a.uri)}\n      }\n    }\n  }\n\n  var nsp = tagName.indexOf(':');\n\n  if (nsp > 0) {\n    prefix = el.prefix = tagName.slice(0, nsp);\n    localName = el.localName = tagName.slice(nsp + 1);\n  } else {\n    prefix = null; //important!!\n\n    localName = el.localName = tagName;\n  } //no prefix element has default namespace\n\n\n  var ns = el.uri = currentNSMap[prefix || ''];\n  domBuilder.startElement(ns, localName, tagName, el); //endPrefixMapping and startPrefixMapping have not any help for dom builder\n  //localNSMap = null\n\n  if (el.closed) {\n    domBuilder.endElement(ns, localName, tagName);\n\n    if (localNSMap) {\n      for (prefix in localNSMap) {\n        if (Object.prototype.hasOwnProperty.call(localNSMap, prefix)) {\n          domBuilder.endPrefixMapping(prefix);\n        }\n      }\n    }\n  } else {\n    el.currentNSMap = currentNSMap;\n    el.localNSMap = localNSMap; //parseStack.push(el);\n\n    return true;\n  }\n}\n\nfunction parseHtmlSpecialContent(source, elStartEnd, tagName, entityReplacer, domBuilder) {\n  if (/^(?:script|textarea)$/i.test(tagName)) {\n    var elEndStart = source.indexOf('</' + tagName + '>', elStartEnd);\n    var text = source.substring(elStartEnd + 1, elEndStart);\n\n    if (/[&<]/.test(text)) {\n      if (/^script$/i.test(tagName)) {\n        //if(!/\\]\\]>/.test(text)){\n        //lexHandler.startCDATA();\n        domBuilder.characters(text, 0, text.length); //lexHandler.endCDATA();\n\n        return elEndStart; //}\n      } //}else{//text area\n\n\n      text = text.replace(/&#?\\w+;/g, entityReplacer);\n      domBuilder.characters(text, 0, text.length);\n      return elEndStart; //}\n    }\n  }\n\n  return elStartEnd + 1;\n}\n\nfunction fixSelfClosed(source, elStartEnd, tagName, closeMap) {\n  //if(tagName in closeMap){\n  var pos = closeMap[tagName];\n\n  if (pos == null) {\n    //console.log(tagName)\n    pos = source.lastIndexOf('</' + tagName + '>');\n\n    if (pos < elStartEnd) {\n      //忘记闭合\n      pos = source.lastIndexOf('</' + tagName);\n    }\n\n    closeMap[tagName] = pos;\n  }\n\n  return pos < elStartEnd; //} \n}\n\nfunction _copy(source, target) {\n  for (var n in source) {\n    if (Object.prototype.hasOwnProperty.call(source, n)) {\n      target[n] = source[n];\n    }\n  }\n}\n\nfunction parseDCC(source, start, domBuilder, errorHandler) {\n  //sure start with '<!'\n  var next = source.charAt(start + 2);\n\n  switch (next) {\n    case '-':\n      if (source.charAt(start + 3) === '-') {\n        var end = source.indexOf('-->', start + 4); //append comment source.substring(4,end)//<!--\n\n        if (end > start) {\n          domBuilder.comment(source, start + 4, end - start - 4);\n          return end + 3;\n        } else {\n          errorHandler.error(\"Unclosed comment\");\n          return -1;\n        }\n      } else {\n        //error\n        return -1;\n      }\n\n    default:\n      if (source.substr(start + 3, 6) == 'CDATA[') {\n        var end = source.indexOf(']]>', start + 9);\n        domBuilder.startCDATA();\n        domBuilder.characters(source, start + 9, end - start - 9);\n        domBuilder.endCDATA();\n        return end + 3;\n      } //<!DOCTYPE\n      //startDTD(java.lang.String name, java.lang.String publicId, java.lang.String systemId) \n\n\n      var matchs = split(source, start);\n      var len = matchs.length;\n\n      if (len > 1 && /!doctype/i.test(matchs[0][0])) {\n        var name = matchs[1][0];\n        var pubid = false;\n        var sysid = false;\n\n        if (len > 3) {\n          if (/^public$/i.test(matchs[2][0])) {\n            pubid = matchs[3][0];\n            sysid = len > 4 && matchs[4][0];\n          } else if (/^system$/i.test(matchs[2][0])) {\n            sysid = matchs[3][0];\n          }\n        }\n\n        var lastMatch = matchs[len - 1];\n        domBuilder.startDTD(name, pubid, sysid);\n        domBuilder.endDTD();\n        return lastMatch.index + lastMatch[0].length;\n      }\n\n  }\n\n  return -1;\n}\n\nfunction parseInstruction(source, start, domBuilder) {\n  var end = source.indexOf('?>', start);\n\n  if (end) {\n    var match = source.substring(start, end).match(/^<\\?(\\S*)\\s*([\\s\\S]*?)\\s*$/);\n\n    if (match) {\n      var len = match[0].length;\n      domBuilder.processingInstruction(match[1], match[2]);\n      return end + 2;\n    } else {\n      //error\n      return -1;\n    }\n  }\n\n  return -1;\n}\n\nfunction ElementAttributes() {\n  this.attributeNames = {};\n}\n\nElementAttributes.prototype = {\n  setTagName: function (tagName) {\n    if (!tagNamePattern.test(tagName)) {\n      throw new Error('invalid tagName:' + tagName);\n    }\n\n    this.tagName = tagName;\n  },\n  addValue: function (qName, value, offset) {\n    if (!tagNamePattern.test(qName)) {\n      throw new Error('invalid attribute:' + qName);\n    }\n\n    this.attributeNames[qName] = this.length;\n    this[this.length++] = {\n      qName: qName,\n      value: value,\n      offset: offset\n    };\n  },\n  length: 0,\n  getLocalName: function (i) {\n    return this[i].localName;\n  },\n  getLocator: function (i) {\n    return this[i].locator;\n  },\n  getQName: function (i) {\n    return this[i].qName;\n  },\n  getURI: function (i) {\n    return this[i].uri;\n  },\n  getValue: function (i) {\n    return this[i].value;\n  } //\t,getIndex:function(uri, localName)){\n  //\t\tif(localName){\n  //\t\t\t\n  //\t\t}else{\n  //\t\t\tvar qName = uri\n  //\t\t}\n  //\t},\n  //\tgetValue:function(){return this.getValue(this.getIndex.apply(this,arguments))},\n  //\tgetType:function(uri,localName){}\n  //\tgetType:function(i){},\n\n};\n\nfunction split(source, start) {\n  var match;\n  var buf = [];\n  var reg = /'[^']+'|\"[^\"]+\"|[^\\s<>\\/=]+=?|(\\/?\\s*>|<)/g;\n  reg.lastIndex = start;\n  reg.exec(source); //skip <\n\n  while (match = reg.exec(source)) {\n    buf.push(match);\n    if (match[1]) return buf;\n  }\n}\n\nexports.XMLReader = XMLReader;\nexports.ParseError = ParseError;","map":{"version":3,"names":["NAMESPACE","require","nameStartChar","nameChar","RegExp","source","slice","tagNamePattern","S_TAG","S_ATTR","S_ATTR_SPACE","S_EQ","S_ATTR_NOQUOT_VALUE","S_ATTR_END","S_TAG_SPACE","S_TAG_CLOSE","ParseError","message","locator","Error","captureStackTrace","prototype","name","XMLReader","parse","defaultNSMap","entityMap","domBuilder","startDocument","_copy","errorHandler","endDocument","defaultNSMapCopy","fixedFromCharCode","code","surrogate1","surrogate2","String","fromCharCode","entityReplacer","a","k","charAt","parseInt","substr","replace","error","appendText","end","start","xt","substring","position","characters","p","m","lineEnd","linePattern","exec","lineStart","index","length","lineNumber","columnNumber","parseStack","currentNSMap","closeMap","tagStart","indexOf","match","doc","text","createTextNode","appendChild","currentElement","tagName","config","pop","localNSMap","endMatch","endIgnoreCaseMach","toLowerCase","endElement","uri","localName","prefix","Object","hasOwnProperty","call","endPrefixMapping","fatalError","push","parseInstruction","parseDCC","el","ElementAttributes","parseElementStartPart","len","closed","fixSelfClosed","nbsp","warning","locator2","copyLocator","i","offset","appendElement","isHTML","parseHtmlSpecialContent","e","Math","max","f","t","addAttribute","qname","value","startIndex","attributeNames","addValue","attrName","s","c","setTagName","qName","nsp","nsPrefix","XMLNS","startPrefixMapping","XML","ns","startElement","elStartEnd","test","elEndStart","pos","lastIndexOf","target","n","next","comment","startCDATA","endCDATA","matchs","split","pubid","sysid","lastMatch","startDTD","endDTD","processingInstruction","getLocalName","getLocator","getQName","getURI","getValue","buf","reg","lastIndex","exports"],"sources":["C:/Users/Alexi/Desktop/Teleco 22-23/SMM/GrupoC/frontend/node_modules/@xmldom/xmldom/lib/sax.js"],"sourcesContent":["var NAMESPACE = require(\"./conventions\").NAMESPACE;\n\n//[4]   \tNameStartChar\t   ::=   \t\":\" | [A-Z] | \"_\" | [a-z] | [#xC0-#xD6] | [#xD8-#xF6] | [#xF8-#x2FF] | [#x370-#x37D] | [#x37F-#x1FFF] | [#x200C-#x200D] | [#x2070-#x218F] | [#x2C00-#x2FEF] | [#x3001-#xD7FF] | [#xF900-#xFDCF] | [#xFDF0-#xFFFD] | [#x10000-#xEFFFF]\n//[4a]   \tNameChar\t   ::=   \tNameStartChar | \"-\" | \".\" | [0-9] | #xB7 | [#x0300-#x036F] | [#x203F-#x2040]\n//[5]   \tName\t   ::=   \tNameStartChar (NameChar)*\nvar nameStartChar = /[A-Z_a-z\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]///\\u10000-\\uEFFFF\nvar nameChar = new RegExp(\"[\\\\-\\\\.0-9\"+nameStartChar.source.slice(1,-1)+\"\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]\");\nvar tagNamePattern = new RegExp('^'+nameStartChar.source+nameChar.source+'*(?:\\:'+nameStartChar.source+nameChar.source+'*)?$');\n//var tagNamePattern = /^[a-zA-Z_][\\w\\-\\.]*(?:\\:[a-zA-Z_][\\w\\-\\.]*)?$/\n//var handlers = 'resolveEntity,getExternalSubset,characters,endDocument,endElement,endPrefixMapping,ignorableWhitespace,processingInstruction,setDocumentLocator,skippedEntity,startDocument,startElement,startPrefixMapping,notationDecl,unparsedEntityDecl,error,fatalError,warning,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,comment,endCDATA,endDTD,endEntity,startCDATA,startDTD,startEntity'.split(',')\n\n//S_TAG,\tS_ATTR,\tS_EQ,\tS_ATTR_NOQUOT_VALUE\n//S_ATTR_SPACE,\tS_ATTR_END,\tS_TAG_SPACE, S_TAG_CLOSE\nvar S_TAG = 0;//tag name offerring\nvar S_ATTR = 1;//attr name offerring \nvar S_ATTR_SPACE=2;//attr name end and space offer\nvar S_EQ = 3;//=space?\nvar S_ATTR_NOQUOT_VALUE = 4;//attr value(no quot value only)\nvar S_ATTR_END = 5;//attr value end and no space(quot end)\nvar S_TAG_SPACE = 6;//(attr value end || tag end ) && (space offer)\nvar S_TAG_CLOSE = 7;//closed el<el />\n\n/**\n * Creates an error that will not be caught by XMLReader aka the SAX parser.\n *\n * @param {string} message\n * @param {any?} locator Optional, can provide details about the location in the source\n * @constructor\n */\nfunction ParseError(message, locator) {\n\tthis.message = message\n\tthis.locator = locator\n\tif(Error.captureStackTrace) Error.captureStackTrace(this, ParseError);\n}\nParseError.prototype = new Error();\nParseError.prototype.name = ParseError.name\n\nfunction XMLReader(){\n\t\n}\n\nXMLReader.prototype = {\n\tparse:function(source,defaultNSMap,entityMap){\n\t\tvar domBuilder = this.domBuilder;\n\t\tdomBuilder.startDocument();\n\t\t_copy(defaultNSMap ,defaultNSMap = {})\n\t\tparse(source,defaultNSMap,entityMap,\n\t\t\t\tdomBuilder,this.errorHandler);\n\t\tdomBuilder.endDocument();\n\t}\n}\nfunction parse(source,defaultNSMapCopy,entityMap,domBuilder,errorHandler){\n\tfunction fixedFromCharCode(code) {\n\t\t// String.prototype.fromCharCode does not supports\n\t\t// > 2 bytes unicode chars directly\n\t\tif (code > 0xffff) {\n\t\t\tcode -= 0x10000;\n\t\t\tvar surrogate1 = 0xd800 + (code >> 10)\n\t\t\t\t, surrogate2 = 0xdc00 + (code & 0x3ff);\n\n\t\t\treturn String.fromCharCode(surrogate1, surrogate2);\n\t\t} else {\n\t\t\treturn String.fromCharCode(code);\n\t\t}\n\t}\n\tfunction entityReplacer(a){\n\t\tvar k = a.slice(1,-1);\n\t\tif(k in entityMap){\n\t\t\treturn entityMap[k]; \n\t\t}else if(k.charAt(0) === '#'){\n\t\t\treturn fixedFromCharCode(parseInt(k.substr(1).replace('x','0x')))\n\t\t}else{\n\t\t\terrorHandler.error('entity not found:'+a);\n\t\t\treturn a;\n\t\t}\n\t}\n\tfunction appendText(end){//has some bugs\n\t\tif(end>start){\n\t\t\tvar xt = source.substring(start,end).replace(/&#?\\w+;/g,entityReplacer);\n\t\t\tlocator&&position(start);\n\t\t\tdomBuilder.characters(xt,0,end-start);\n\t\t\tstart = end\n\t\t}\n\t}\n\tfunction position(p,m){\n\t\twhile(p>=lineEnd && (m = linePattern.exec(source))){\n\t\t\tlineStart = m.index;\n\t\t\tlineEnd = lineStart + m[0].length;\n\t\t\tlocator.lineNumber++;\n\t\t\t//console.log('line++:',locator,startPos,endPos)\n\t\t}\n\t\tlocator.columnNumber = p-lineStart+1;\n\t}\n\tvar lineStart = 0;\n\tvar lineEnd = 0;\n\tvar linePattern = /.*(?:\\r\\n?|\\n)|.*$/g\n\tvar locator = domBuilder.locator;\n\t\n\tvar parseStack = [{currentNSMap:defaultNSMapCopy}]\n\tvar closeMap = {};\n\tvar start = 0;\n\twhile(true){\n\t\ttry{\n\t\t\tvar tagStart = source.indexOf('<',start);\n\t\t\tif(tagStart<0){\n\t\t\t\tif(!source.substr(start).match(/^\\s*$/)){\n\t\t\t\t\tvar doc = domBuilder.doc;\n\t    \t\t\tvar text = doc.createTextNode(source.substr(start));\n\t    \t\t\tdoc.appendChild(text);\n\t    \t\t\tdomBuilder.currentElement = text;\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif(tagStart>start){\n\t\t\t\tappendText(tagStart);\n\t\t\t}\n\t\t\tswitch(source.charAt(tagStart+1)){\n\t\t\tcase '/':\n\t\t\t\tvar end = source.indexOf('>',tagStart+3);\n\t\t\t\tvar tagName = source.substring(tagStart + 2, end).replace(/[ \\t\\n\\r]+$/g, '');\n\t\t\t\tvar config = parseStack.pop();\n\t\t\t\tif(end<0){\n\t\t\t\t\t\n\t        \t\ttagName = source.substring(tagStart+2).replace(/[\\s<].*/,'');\n\t        \t\terrorHandler.error(\"end tag name: \"+tagName+' is not complete:'+config.tagName);\n\t        \t\tend = tagStart+1+tagName.length;\n\t        \t}else if(tagName.match(/\\s</)){\n\t        \t\ttagName = tagName.replace(/[\\s<].*/,'');\n\t        \t\terrorHandler.error(\"end tag name: \"+tagName+' maybe not complete');\n\t        \t\tend = tagStart+1+tagName.length;\n\t\t\t\t}\n\t\t\t\tvar localNSMap = config.localNSMap;\n\t\t\t\tvar endMatch = config.tagName == tagName;\n\t\t\t\tvar endIgnoreCaseMach = endMatch || config.tagName&&config.tagName.toLowerCase() == tagName.toLowerCase()\n\t\t        if(endIgnoreCaseMach){\n\t\t        \tdomBuilder.endElement(config.uri,config.localName,tagName);\n\t\t\t\t\tif(localNSMap){\n\t\t\t\t\t\tfor(var prefix in localNSMap) {\n\t\t\t\t\t\t\tif (Object.prototype.hasOwnProperty.call(localNSMap, prefix)) {\n\t\t\t\t\t\t\t\tdomBuilder.endPrefixMapping(prefix);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(!endMatch){\n\t\t            \terrorHandler.fatalError(\"end tag name: \"+tagName+' is not match the current start tagName:'+config.tagName ); // No known test case\n\t\t\t\t\t}\n\t\t        }else{\n\t\t        \tparseStack.push(config)\n\t\t        }\n\t\t\t\t\n\t\t\t\tend++;\n\t\t\t\tbreak;\n\t\t\t\t// end elment\n\t\t\tcase '?':// <?...?>\n\t\t\t\tlocator&&position(tagStart);\n\t\t\t\tend = parseInstruction(source,tagStart,domBuilder);\n\t\t\t\tbreak;\n\t\t\tcase '!':// <!doctype,<![CDATA,<!--\n\t\t\t\tlocator&&position(tagStart);\n\t\t\t\tend = parseDCC(source,tagStart,domBuilder,errorHandler);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tlocator&&position(tagStart);\n\t\t\t\tvar el = new ElementAttributes();\n\t\t\t\tvar currentNSMap = parseStack[parseStack.length-1].currentNSMap;\n\t\t\t\t//elStartEnd\n\t\t\t\tvar end = parseElementStartPart(source,tagStart,el,currentNSMap,entityReplacer,errorHandler);\n\t\t\t\tvar len = el.length;\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tif(!el.closed && fixSelfClosed(source,end,el.tagName,closeMap)){\n\t\t\t\t\tel.closed = true;\n\t\t\t\t\tif(!entityMap.nbsp){\n\t\t\t\t\t\terrorHandler.warning('unclosed xml attribute');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(locator && len){\n\t\t\t\t\tvar locator2 = copyLocator(locator,{});\n\t\t\t\t\t//try{//attribute position fixed\n\t\t\t\t\tfor(var i = 0;i<len;i++){\n\t\t\t\t\t\tvar a = el[i];\n\t\t\t\t\t\tposition(a.offset);\n\t\t\t\t\t\ta.locator = copyLocator(locator,{});\n\t\t\t\t\t}\n\t\t\t\t\tdomBuilder.locator = locator2\n\t\t\t\t\tif(appendElement(el,domBuilder,currentNSMap)){\n\t\t\t\t\t\tparseStack.push(el)\n\t\t\t\t\t}\n\t\t\t\t\tdomBuilder.locator = locator;\n\t\t\t\t}else{\n\t\t\t\t\tif(appendElement(el,domBuilder,currentNSMap)){\n\t\t\t\t\t\tparseStack.push(el)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (NAMESPACE.isHTML(el.uri) && !el.closed) {\n\t\t\t\t\tend = parseHtmlSpecialContent(source,end,el.tagName,entityReplacer,domBuilder)\n\t\t\t\t} else {\n\t\t\t\t\tend++;\n\t\t\t\t}\n\t\t\t}\n\t\t}catch(e){\n\t\t\tif (e instanceof ParseError) {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t\terrorHandler.error('element parse error: '+e)\n\t\t\tend = -1;\n\t\t}\n\t\tif(end>start){\n\t\t\tstart = end;\n\t\t}else{\n\t\t\t//TODO: 这里有可能sax回退，有位置错误风险\n\t\t\tappendText(Math.max(tagStart,start)+1);\n\t\t}\n\t}\n}\nfunction copyLocator(f,t){\n\tt.lineNumber = f.lineNumber;\n\tt.columnNumber = f.columnNumber;\n\treturn t;\n}\n\n/**\n * @see #appendElement(source,elStartEnd,el,selfClosed,entityReplacer,domBuilder,parseStack);\n * @return end of the elementStartPart(end of elementEndPart for selfClosed el)\n */\nfunction parseElementStartPart(source,start,el,currentNSMap,entityReplacer,errorHandler){\n\n\t/**\n\t * @param {string} qname\n\t * @param {string} value\n\t * @param {number} startIndex\n\t */\n\tfunction addAttribute(qname, value, startIndex) {\n\t\tif (el.attributeNames.hasOwnProperty(qname)) {\n\t\t\terrorHandler.fatalError('Attribute ' + qname + ' redefined')\n\t\t}\n\t\tel.addValue(qname, value, startIndex)\n\t}\n\tvar attrName;\n\tvar value;\n\tvar p = ++start;\n\tvar s = S_TAG;//status\n\twhile(true){\n\t\tvar c = source.charAt(p);\n\t\tswitch(c){\n\t\tcase '=':\n\t\t\tif(s === S_ATTR){//attrName\n\t\t\t\tattrName = source.slice(start,p);\n\t\t\t\ts = S_EQ;\n\t\t\t}else if(s === S_ATTR_SPACE){\n\t\t\t\ts = S_EQ;\n\t\t\t}else{\n\t\t\t\t//fatalError: equal must after attrName or space after attrName\n\t\t\t\tthrow new Error('attribute equal must after attrName'); // No known test case\n\t\t\t}\n\t\t\tbreak;\n\t\tcase '\\'':\n\t\tcase '\"':\n\t\t\tif(s === S_EQ || s === S_ATTR //|| s == S_ATTR_SPACE\n\t\t\t\t){//equal\n\t\t\t\tif(s === S_ATTR){\n\t\t\t\t\terrorHandler.warning('attribute value must after \"=\"')\n\t\t\t\t\tattrName = source.slice(start,p)\n\t\t\t\t}\n\t\t\t\tstart = p+1;\n\t\t\t\tp = source.indexOf(c,start)\n\t\t\t\tif(p>0){\n\t\t\t\t\tvalue = source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);\n\t\t\t\t\taddAttribute(attrName, value, start-1);\n\t\t\t\t\ts = S_ATTR_END;\n\t\t\t\t}else{\n\t\t\t\t\t//fatalError: no end quot match\n\t\t\t\t\tthrow new Error('attribute value no end \\''+c+'\\' match');\n\t\t\t\t}\n\t\t\t}else if(s == S_ATTR_NOQUOT_VALUE){\n\t\t\t\tvalue = source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);\n\t\t\t\t//console.log(attrName,value,start,p)\n\t\t\t\taddAttribute(attrName, value, start);\n\t\t\t\t//console.dir(el)\n\t\t\t\terrorHandler.warning('attribute \"'+attrName+'\" missed start quot('+c+')!!');\n\t\t\t\tstart = p+1;\n\t\t\t\ts = S_ATTR_END\n\t\t\t}else{\n\t\t\t\t//fatalError: no equal before\n\t\t\t\tthrow new Error('attribute value must after \"=\"'); // No known test case\n\t\t\t}\n\t\t\tbreak;\n\t\tcase '/':\n\t\t\tswitch(s){\n\t\t\tcase S_TAG:\n\t\t\t\tel.setTagName(source.slice(start,p));\n\t\t\tcase S_ATTR_END:\n\t\t\tcase S_TAG_SPACE:\n\t\t\tcase S_TAG_CLOSE:\n\t\t\t\ts =S_TAG_CLOSE;\n\t\t\t\tel.closed = true;\n\t\t\tcase S_ATTR_NOQUOT_VALUE:\n\t\t\tcase S_ATTR:\n\t\t\tcase S_ATTR_SPACE:\n\t\t\t\tbreak;\n\t\t\t//case S_EQ:\n\t\t\tdefault:\n\t\t\t\tthrow new Error(\"attribute invalid close char('/')\") // No known test case\n\t\t\t}\n\t\t\tbreak;\n\t\tcase ''://end document\n\t\t\terrorHandler.error('unexpected end of input');\n\t\t\tif(s == S_TAG){\n\t\t\t\tel.setTagName(source.slice(start,p));\n\t\t\t}\n\t\t\treturn p;\n\t\tcase '>':\n\t\t\tswitch(s){\n\t\t\tcase S_TAG:\n\t\t\t\tel.setTagName(source.slice(start,p));\n\t\t\tcase S_ATTR_END:\n\t\t\tcase S_TAG_SPACE:\n\t\t\tcase S_TAG_CLOSE:\n\t\t\t\tbreak;//normal\n\t\t\tcase S_ATTR_NOQUOT_VALUE://Compatible state\n\t\t\tcase S_ATTR:\n\t\t\t\tvalue = source.slice(start,p);\n\t\t\t\tif(value.slice(-1) === '/'){\n\t\t\t\t\tel.closed  = true;\n\t\t\t\t\tvalue = value.slice(0,-1)\n\t\t\t\t}\n\t\t\tcase S_ATTR_SPACE:\n\t\t\t\tif(s === S_ATTR_SPACE){\n\t\t\t\t\tvalue = attrName;\n\t\t\t\t}\n\t\t\t\tif(s == S_ATTR_NOQUOT_VALUE){\n\t\t\t\t\terrorHandler.warning('attribute \"'+value+'\" missed quot(\")!');\n\t\t\t\t\taddAttribute(attrName, value.replace(/&#?\\w+;/g,entityReplacer), start)\n\t\t\t\t}else{\n\t\t\t\t\tif(!NAMESPACE.isHTML(currentNSMap['']) || !value.match(/^(?:disabled|checked|selected)$/i)){\n\t\t\t\t\t\terrorHandler.warning('attribute \"'+value+'\" missed value!! \"'+value+'\" instead!!')\n\t\t\t\t\t}\n\t\t\t\t\taddAttribute(value, value, start)\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase S_EQ:\n\t\t\t\tthrow new Error('attribute value missed!!');\n\t\t\t}\n//\t\t\tconsole.log(tagName,tagNamePattern,tagNamePattern.test(tagName))\n\t\t\treturn p;\n\t\t/*xml space '\\x20' | #x9 | #xD | #xA; */\n\t\tcase '\\u0080':\n\t\t\tc = ' ';\n\t\tdefault:\n\t\t\tif(c<= ' '){//space\n\t\t\t\tswitch(s){\n\t\t\t\tcase S_TAG:\n\t\t\t\t\tel.setTagName(source.slice(start,p));//tagName\n\t\t\t\t\ts = S_TAG_SPACE;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_ATTR:\n\t\t\t\t\tattrName = source.slice(start,p)\n\t\t\t\t\ts = S_ATTR_SPACE;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_ATTR_NOQUOT_VALUE:\n\t\t\t\t\tvar value = source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);\n\t\t\t\t\terrorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');\n\t\t\t\t\taddAttribute(attrName, value, start)\n\t\t\t\tcase S_ATTR_END:\n\t\t\t\t\ts = S_TAG_SPACE;\n\t\t\t\t\tbreak;\n\t\t\t\t//case S_TAG_SPACE:\n\t\t\t\t//case S_EQ:\n\t\t\t\t//case S_ATTR_SPACE:\n\t\t\t\t//\tvoid();break;\n\t\t\t\t//case S_TAG_CLOSE:\n\t\t\t\t\t//ignore warning\n\t\t\t\t}\n\t\t\t}else{//not space\n//S_TAG,\tS_ATTR,\tS_EQ,\tS_ATTR_NOQUOT_VALUE\n//S_ATTR_SPACE,\tS_ATTR_END,\tS_TAG_SPACE, S_TAG_CLOSE\n\t\t\t\tswitch(s){\n\t\t\t\t//case S_TAG:void();break;\n\t\t\t\t//case S_ATTR:void();break;\n\t\t\t\t//case S_ATTR_NOQUOT_VALUE:void();break;\n\t\t\t\tcase S_ATTR_SPACE:\n\t\t\t\t\tvar tagName =  el.tagName;\n\t\t\t\t\tif (!NAMESPACE.isHTML(currentNSMap['']) || !attrName.match(/^(?:disabled|checked|selected)$/i)) {\n\t\t\t\t\t\terrorHandler.warning('attribute \"'+attrName+'\" missed value!! \"'+attrName+'\" instead2!!')\n\t\t\t\t\t}\n\t\t\t\t\taddAttribute(attrName, attrName, start);\n\t\t\t\t\tstart = p;\n\t\t\t\t\ts = S_ATTR;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_ATTR_END:\n\t\t\t\t\terrorHandler.warning('attribute space is required\"'+attrName+'\"!!')\n\t\t\t\tcase S_TAG_SPACE:\n\t\t\t\t\ts = S_ATTR;\n\t\t\t\t\tstart = p;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_EQ:\n\t\t\t\t\ts = S_ATTR_NOQUOT_VALUE;\n\t\t\t\t\tstart = p;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_TAG_CLOSE:\n\t\t\t\t\tthrow new Error(\"elements closed character '/' and '>' must be connected to\");\n\t\t\t\t}\n\t\t\t}\n\t\t}//end outer switch\n\t\t//console.log('p++',p)\n\t\tp++;\n\t}\n}\n/**\n * @return true if has new namespace define\n */\nfunction appendElement(el,domBuilder,currentNSMap){\n\tvar tagName = el.tagName;\n\tvar localNSMap = null;\n\t//var currentNSMap = parseStack[parseStack.length-1].currentNSMap;\n\tvar i = el.length;\n\twhile(i--){\n\t\tvar a = el[i];\n\t\tvar qName = a.qName;\n\t\tvar value = a.value;\n\t\tvar nsp = qName.indexOf(':');\n\t\tif(nsp>0){\n\t\t\tvar prefix = a.prefix = qName.slice(0,nsp);\n\t\t\tvar localName = qName.slice(nsp+1);\n\t\t\tvar nsPrefix = prefix === 'xmlns' && localName\n\t\t}else{\n\t\t\tlocalName = qName;\n\t\t\tprefix = null\n\t\t\tnsPrefix = qName === 'xmlns' && ''\n\t\t}\n\t\t//can not set prefix,because prefix !== ''\n\t\ta.localName = localName ;\n\t\t//prefix == null for no ns prefix attribute \n\t\tif(nsPrefix !== false){//hack!!\n\t\t\tif(localNSMap == null){\n\t\t\t\tlocalNSMap = {}\n\t\t\t\t//console.log(currentNSMap,0)\n\t\t\t\t_copy(currentNSMap,currentNSMap={})\n\t\t\t\t//console.log(currentNSMap,1)\n\t\t\t}\n\t\t\tcurrentNSMap[nsPrefix] = localNSMap[nsPrefix] = value;\n\t\t\ta.uri = NAMESPACE.XMLNS\n\t\t\tdomBuilder.startPrefixMapping(nsPrefix, value) \n\t\t}\n\t}\n\tvar i = el.length;\n\twhile(i--){\n\t\ta = el[i];\n\t\tvar prefix = a.prefix;\n\t\tif(prefix){//no prefix attribute has no namespace\n\t\t\tif(prefix === 'xml'){\n\t\t\t\ta.uri = NAMESPACE.XML;\n\t\t\t}if(prefix !== 'xmlns'){\n\t\t\t\ta.uri = currentNSMap[prefix || '']\n\t\t\t\t\n\t\t\t\t//{console.log('###'+a.qName,domBuilder.locator.systemId+'',currentNSMap,a.uri)}\n\t\t\t}\n\t\t}\n\t}\n\tvar nsp = tagName.indexOf(':');\n\tif(nsp>0){\n\t\tprefix = el.prefix = tagName.slice(0,nsp);\n\t\tlocalName = el.localName = tagName.slice(nsp+1);\n\t}else{\n\t\tprefix = null;//important!!\n\t\tlocalName = el.localName = tagName;\n\t}\n\t//no prefix element has default namespace\n\tvar ns = el.uri = currentNSMap[prefix || ''];\n\tdomBuilder.startElement(ns,localName,tagName,el);\n\t//endPrefixMapping and startPrefixMapping have not any help for dom builder\n\t//localNSMap = null\n\tif(el.closed){\n\t\tdomBuilder.endElement(ns,localName,tagName);\n\t\tif(localNSMap){\n\t\t\tfor (prefix in localNSMap) {\n\t\t\t\tif (Object.prototype.hasOwnProperty.call(localNSMap, prefix)) {\n\t\t\t\t\tdomBuilder.endPrefixMapping(prefix);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}else{\n\t\tel.currentNSMap = currentNSMap;\n\t\tel.localNSMap = localNSMap;\n\t\t//parseStack.push(el);\n\t\treturn true;\n\t}\n}\nfunction parseHtmlSpecialContent(source,elStartEnd,tagName,entityReplacer,domBuilder){\n\tif(/^(?:script|textarea)$/i.test(tagName)){\n\t\tvar elEndStart =  source.indexOf('</'+tagName+'>',elStartEnd);\n\t\tvar text = source.substring(elStartEnd+1,elEndStart);\n\t\tif(/[&<]/.test(text)){\n\t\t\tif(/^script$/i.test(tagName)){\n\t\t\t\t//if(!/\\]\\]>/.test(text)){\n\t\t\t\t\t//lexHandler.startCDATA();\n\t\t\t\t\tdomBuilder.characters(text,0,text.length);\n\t\t\t\t\t//lexHandler.endCDATA();\n\t\t\t\t\treturn elEndStart;\n\t\t\t\t//}\n\t\t\t}//}else{//text area\n\t\t\t\ttext = text.replace(/&#?\\w+;/g,entityReplacer);\n\t\t\t\tdomBuilder.characters(text,0,text.length);\n\t\t\t\treturn elEndStart;\n\t\t\t//}\n\t\t\t\n\t\t}\n\t}\n\treturn elStartEnd+1;\n}\nfunction fixSelfClosed(source,elStartEnd,tagName,closeMap){\n\t//if(tagName in closeMap){\n\tvar pos = closeMap[tagName];\n\tif(pos == null){\n\t\t//console.log(tagName)\n\t\tpos =  source.lastIndexOf('</'+tagName+'>')\n\t\tif(pos<elStartEnd){//忘记闭合\n\t\t\tpos = source.lastIndexOf('</'+tagName)\n\t\t}\n\t\tcloseMap[tagName] =pos\n\t}\n\treturn pos<elStartEnd;\n\t//} \n}\n\nfunction _copy (source, target) {\n\tfor (var n in source) {\n\t\tif (Object.prototype.hasOwnProperty.call(source, n)) {\n\t\t\ttarget[n] = source[n];\n\t\t}\n\t}\n}\n\nfunction parseDCC(source,start,domBuilder,errorHandler){//sure start with '<!'\n\tvar next= source.charAt(start+2)\n\tswitch(next){\n\tcase '-':\n\t\tif(source.charAt(start + 3) === '-'){\n\t\t\tvar end = source.indexOf('-->',start+4);\n\t\t\t//append comment source.substring(4,end)//<!--\n\t\t\tif(end>start){\n\t\t\t\tdomBuilder.comment(source,start+4,end-start-4);\n\t\t\t\treturn end+3;\n\t\t\t}else{\n\t\t\t\terrorHandler.error(\"Unclosed comment\");\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}else{\n\t\t\t//error\n\t\t\treturn -1;\n\t\t}\n\tdefault:\n\t\tif(source.substr(start+3,6) == 'CDATA['){\n\t\t\tvar end = source.indexOf(']]>',start+9);\n\t\t\tdomBuilder.startCDATA();\n\t\t\tdomBuilder.characters(source,start+9,end-start-9);\n\t\t\tdomBuilder.endCDATA() \n\t\t\treturn end+3;\n\t\t}\n\t\t//<!DOCTYPE\n\t\t//startDTD(java.lang.String name, java.lang.String publicId, java.lang.String systemId) \n\t\tvar matchs = split(source,start);\n\t\tvar len = matchs.length;\n\t\tif(len>1 && /!doctype/i.test(matchs[0][0])){\n\t\t\tvar name = matchs[1][0];\n\t\t\tvar pubid = false;\n\t\t\tvar sysid = false;\n\t\t\tif(len>3){\n\t\t\t\tif(/^public$/i.test(matchs[2][0])){\n\t\t\t\t\tpubid = matchs[3][0];\n\t\t\t\t\tsysid = len>4 && matchs[4][0];\n\t\t\t\t}else if(/^system$/i.test(matchs[2][0])){\n\t\t\t\t\tsysid = matchs[3][0];\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar lastMatch = matchs[len-1]\n\t\t\tdomBuilder.startDTD(name, pubid, sysid);\n\t\t\tdomBuilder.endDTD();\n\t\t\t\n\t\t\treturn lastMatch.index+lastMatch[0].length\n\t\t}\n\t}\n\treturn -1;\n}\n\n\n\nfunction parseInstruction(source,start,domBuilder){\n\tvar end = source.indexOf('?>',start);\n\tif(end){\n\t\tvar match = source.substring(start,end).match(/^<\\?(\\S*)\\s*([\\s\\S]*?)\\s*$/);\n\t\tif(match){\n\t\t\tvar len = match[0].length;\n\t\t\tdomBuilder.processingInstruction(match[1], match[2]) ;\n\t\t\treturn end+2;\n\t\t}else{//error\n\t\t\treturn -1;\n\t\t}\n\t}\n\treturn -1;\n}\n\nfunction ElementAttributes(){\n\tthis.attributeNames = {}\n}\nElementAttributes.prototype = {\n\tsetTagName:function(tagName){\n\t\tif(!tagNamePattern.test(tagName)){\n\t\t\tthrow new Error('invalid tagName:'+tagName)\n\t\t}\n\t\tthis.tagName = tagName\n\t},\n\taddValue:function(qName, value, offset) {\n\t\tif(!tagNamePattern.test(qName)){\n\t\t\tthrow new Error('invalid attribute:'+qName)\n\t\t}\n\t\tthis.attributeNames[qName] = this.length;\n\t\tthis[this.length++] = {qName:qName,value:value,offset:offset}\n\t},\n\tlength:0,\n\tgetLocalName:function(i){return this[i].localName},\n\tgetLocator:function(i){return this[i].locator},\n\tgetQName:function(i){return this[i].qName},\n\tgetURI:function(i){return this[i].uri},\n\tgetValue:function(i){return this[i].value}\n//\t,getIndex:function(uri, localName)){\n//\t\tif(localName){\n//\t\t\t\n//\t\t}else{\n//\t\t\tvar qName = uri\n//\t\t}\n//\t},\n//\tgetValue:function(){return this.getValue(this.getIndex.apply(this,arguments))},\n//\tgetType:function(uri,localName){}\n//\tgetType:function(i){},\n}\n\n\n\nfunction split(source,start){\n\tvar match;\n\tvar buf = [];\n\tvar reg = /'[^']+'|\"[^\"]+\"|[^\\s<>\\/=]+=?|(\\/?\\s*>|<)/g;\n\treg.lastIndex = start;\n\treg.exec(source);//skip <\n\twhile(match = reg.exec(source)){\n\t\tbuf.push(match);\n\t\tif(match[1])return buf;\n\t}\n}\n\nexports.XMLReader = XMLReader;\nexports.ParseError = ParseError;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}